name: Build Emscripten

on:
  push:
    branches:
    - 'emscripten'

env:
  BUILD_TYPE: Release

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: emscripten

    - uses: DeterminateSystems/nix-installer-action@main
    - uses: DeterminateSystems/flake-checker-action@v4

    - name: Get emscripten output path
      id: get-emscripten-output-path
      run: |
        path="$(nix derivation show .\#emscripten | jq -r '.[] | .env.nativeBuildInputs' | tr ' ' '\n' | grep '-emscriptenCache$')"
        hash="$(echo "$path" | sed -nE 's,^/nix/store/([^-]+)-.*$,\1,p')"

        echo "path=$path" >> $GITHUB_OUTPUT
        echo "hash=$hash" >> $GITHUB_OUTPUT
      shell: bash
    - name: Cache emscripten closure
      uses: actions/cache@v4
      id: cache-emscripten-closure
      with:
        path: emscripten.closure
        key: nix-closure:emscriptenCache-${{ steps.get-emscripten-output-path.outputs.hash }}
        # If there's no match, get the latest cached closure, if available
        restore-keys: nix-closure:emscriptenCache-
    - name: Import emscripten closure
      if: steps.cache-emscripten-closure.outputs.cache-hit != ''
      run: cat emscripten.closure | sudo "$(which nix-store)" --import

    - name: Configure and build application
      run: nix build -L \#emscripten

    - name: Move artifacts
      run: |
        mkdir output
        (cd output && cp -s ../result/share/cs174a_term_project/* .)
        mv output/cs174a_term_project.html output/index.html

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{github.workspace}}/output

    - name: Export emscripten closure
      if: steps.cache-emscripten-closure.outputs.cache-hit != 'true'
      env:
        EMSCRIPTEN_OUTPUT_PATH: ${{ steps.get-emscripten-output-path.outputs.path }}
      run: nix-store --export $(nix-store --query --requisites "$EMSCRIPTEN_OUTPUT_PATH") > emscripten.closure

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
